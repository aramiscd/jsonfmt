module App.Cmd exposing
    ( exitFailure
    , printLine
    , run
    )

import App.Msg exposing ( Msg )
import Bytes exposing ( Bytes )
import Node
import Stream
import Task


run : Stream.Readable Bytes -> Cmd Msg
run stdin =
    Stream.read stdin
    |> Task.onError ( \ _ -> Task.succeed Bytes.empty )
    |> Task.perform App.Msg.Run


exitFailure : Cmd Msg
exitFailure =
    Node.exitWithCode 1


printLine : Stream.Writable Bytes -> String -> Cmd Msg
printLine toStream data =
    Stream.writeStringAsBytes data toStream
    |> Task.onError ( \ _ -> Task.succeed toStream )
    |> Task.execute
